from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.text import Format
from loguru import logger

# --- Lexicon Structure ---
LEXICON: dict[str, dict[str, str]] = {
    "ru": {
        # General
        "unsupported_message": "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã.",
        "back_button": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        "confirm_button": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
        # Weekdays
        "weekday_0": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
        "weekday_1": "–í—Ç–æ—Ä–Ω–∏–∫",
        "weekday_2": "–°—Ä–µ–¥–∞",
        "weekday_3": "–ß–µ—Ç–≤–µ—Ä–≥",
        "weekday_4": "–ü—è—Ç–Ω–∏—Ü–∞",
        "weekday_5": "–°—É–±–±–æ—Ç–∞",
        "weekday_6": "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
        # Commands
        "start_new_user": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.",
        "start_registered_user": "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É.",
        "start_already_booked": "–í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ <b>{date} ({weekday}) –≤ {time}</b>.\n–û–∫–Ω–æ ‚Ññ{window}.\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel.",
        "help_command": "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.",
        "cancel_no_booking": "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.",
        "cancel_successful": "–í–∞—à–∞ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ.",
        "cancel_failed_too_late": "–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –≤–æ–∑–º–æ–∂–Ω–∞ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ, —á–µ–º –∑–∞ 3 —á–∞—Å–∞ –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
        # Registration Dialog
        "get_name_prompt": "üìù –î–ª—è –Ω–∞—á–∞–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –§–∞–º–∏–ª–∏—é, –ò–º—è –∏ –û—Ç—á–µ—Å—Ç–≤–æ (–µ—Å–ª–∏ –µ—Å—Ç—å).",
        "name_invalid": "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 2 –∏–ª–∏ 3 —Å–ª–æ–≤–∞ (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ).",
        "get_faculty_prompt": "üéì –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ñ–∞–∫—É–ª—å—Ç–µ—Ç:",
        "get_degree_prompt": "üìö –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–ø–µ–Ω—å –æ–±—É—á–µ–Ω–∏—è:",
        "get_year_prompt": "üóìÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∫—É—Ä—Å:",
        "bachelor": "–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç",
        "master": "–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞",
        "specialist": "–°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç",
        "confirm_prompt": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\n"
        "<b>–§–ò–û:</b> {last_name} {first_name} {patronymic}\n"
        "<b>–§–∞–∫—É–ª—å—Ç–µ—Ç:</b> {faculty}\n"
        "<b>–û–±—É—á–µ–Ω–∏–µ:</b> {degree}, {year} –∫—É—Ä—Å\n\n"
        "–í—Å–µ –≤–µ—Ä–Ω–æ?",
        "registration_successful": "‚úÖ –û—Ç–ª–∏—á–Ω–æ, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏.",
        # Schedule Dialog
        "get_date_prompt": "üìÖ –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏:",
        "get_time_prompt": "üïí –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ <b>{selected_date_str}</b>:",
        "no_slots_available": "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É.",
        "confirm_booking_prompt": "–í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ <b>{date} ({weekday}) –≤ {time}</b>?",
        "booking_successful": "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!",
        "booking_failed_already_booked": "‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å. –°–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ–Ω–∏—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é /cancel.",
        "booking_failed_too_late": "‚ùå –≠—Ç–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç —É–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.",
    }
}

# --- Bot Commands ---
LEXICON_COMMANDS: dict[str, str] = {
    "/start": "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è / –ú–æ—è –∑–∞–ø–∏—Å—å",
    "/cancel": "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å",
}

# --- Supported Languages ---
LANGUAGES = [
    {"code": "ru", "name": "–†—É—Å—Å–∫–∏–π üá∑üá∫"},
]
DEFAULT_LANG = "ru"


# --- Localization Functions ---
def lexicon(lang: str | None, key: str, **kwargs) -> str:
    """
    Gets a localized string from the lexicon.
    """
    if lang not in LEXICON:
        lang = DEFAULT_LANG

    text_template = LEXICON.get(lang, {}).get(key, f"err:NO_KEY_{key}")
    return text_template.format(**kwargs) if kwargs else text_template


class LocalizedTextFormat(Format):
    """
    Custom aiogram-dialog widget to format text using the lexicon.
    """

    def __init__(self, key: str):
        super().__init__(text=f"{{{key}}}")
        self.key = key

    async def _render_text(self, data: dict, manager: DialogManager) -> str:
        lang = manager.middleware_data.get("lang", DEFAULT_LANG)
        return lexicon(lang, self.key, **data)
