version: "3.9"

networks:
  default:
    driver: bridge


services:

  redis:
    container_name: redis
    image: redis:latest
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory:
            128M
    networks:
      - default
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
      healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      restart: unless-stopped
      tty: true
      stdin_open: true

  bot:
    build: ./
    depends_on:
      - redis

  sqlite-container:
    image: alpine:latest
    volumes:
      - ./database:/data
    command: sh -c "apk --no-cache add sqlite && cp /data/initial-db.sqlite /data/db.sqlite && sqlite3 /data/db.sqlite < /data/init.sql && tail -f /dev/null"
    container_name: sqlite-container

  sqlitebrowser:
    image: linuxserver/sqlitebrowser
    ports:
      - "3000:3000"
    depends_on:
      - sqlite-container
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - ENABLE_UWSGI=true
    volumes:
      - sqlite_data:/data/db
    container_name: sqlitebrowser

volumes:
  sqlite_data: